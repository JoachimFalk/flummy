actor col2block [int] () int R0, int R1, int R2, int R3,
                         int R4, int R5, int R6, int R7 ==> List[int] B :

  action R0:[r0] repeat 8,
         R1:[r1] repeat 8,
         R2:[r2] repeat 8,
         R3:[r3] repeat 8,
         R4:[r4] repeat 8,
         R5:[r5] repeat 8,
         R6:[r6] repeat 8,
         R7:[r7] repeat 8 ==> B:[r0 + r1 + r2 + r3 + r4 + r5 + r6 + r7]
  end
end

/*************************************************************/

class col2block: public smoc_actor {
public:
  smoc_port_in<int> R0, R1, R2, R3, R4, R5, R6, R7;
  smoc_port_out<int> B;
private:
  void action0() {
    B[0] = R0[0] + R1[0] + R2[0] + R3[0] + R4[0] + R5[0] + R6[0] + R7[0];
    B[1] = R0[1] + R1[1] + R2[1] + R3[1] + R4[1] + R5[1] + R6[1] + R7[1];
    B[2] = R0[2] + R1[2] + R2[2] + R3[2] + R4[2] + R5[2] + R6[2] + R7[2];
    B[3] = R0[3] + R1[3] + R2[3] + R3[3] + R4[3] + R5[3] + R6[3] + R7[3];
    B[4] = R0[4] + R1[4] + R2[4] + R3[4] + R4[4] + R5[4] + R6[4] + R7[4];
    B[5] = R0[5] + R1[5] + R2[5] + R3[5] + R4[5] + R5[5] + R6[5] + R7[5];
    B[6] = R0[6] + R1[6] + R2[6] + R3[6] + R4[6] + R5[6] + R6[6] + R7[6];
    B[7] = R0[7] + R1[7] + R2[7] + R3[7] + R4[7] + R5[7] + R6[7] + R7[7];  
  }
  smoc_firing_state start;
public:
  col2block(sc_module_name name)
    : smoc_actor(name, start) {
    start = (R0.getAvailableTokens() >= 8 &&
             R1.getAvailableTokens() >= 8 &&
             R2.getAvailableTokens() >= 8 &&
             R3.getAvailableTokens() >= 8 &&
             R4.getAvaialbleTokens() >= 8 &&
             R5.getAvailableTokens() >= 8 &&
             R6.getAvailableTokens() >= 8 &&
		 R7.getAvailableTokens() >= 8 ) >>
		 call(&col2block::action0) 	  >> start;
  }
};


