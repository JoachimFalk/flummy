top.transform[]: top.transform:r -- discarding i1[0] == -1, i1[1] == 9, i2[0] == -1, i2[1] == 14 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 8 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 13 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 6 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 11 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 2 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 0 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 6 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 4 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 8 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 7 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 0 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 0 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 0 from i2 to o2 --> top.transform:f1,f2
top.transform[]: top.transform:f1,f2 -- reseting with i1[0] == -1, i2[0] == -1 --> top.transform:r
top.transform[]: top.transform:r -- discarding i1[0] == 1, i1[1] == 0, i2[0] == 6, i2[1] == 5 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 1 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 0 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy1()]: top.transform:f1,f2 -- copy 0 from i1 to o1 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 5 from i2 to o2 --> top.transform:f1,f2
top.transform[Transform::copy2()]: top.transform:f1,f2 -- copy 2 from i2 to o2 --> top.transform:f1,f2
