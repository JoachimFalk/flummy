## Process this file with automake to produce Makefile.in
# vim: set noet sw=2 ts=8 sts=0:
#
# Copyright (C) Joachim Falk <joachim.falk@gmx.de> $Date: 2003/01/15 16:43:20 $
#
# Makefile.am is part of the jflib distribution of Joachim Falk;
# you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation;
# either version 2 of the License, or (at your option) any later version.
#
# The jflib distributio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
#
# $Log$
root_srcdir   := $(shell cd $(top_srcdir)/.. && pwd)
root_builddir := $(shell cd $(top_builddir)/.. && pwd)

include $(auxdir)/jfrules.mk

SUBDIRS=

if SYNTH_SW
  SYNTHESIS_SUBDIR = synthesis
  include $(root_builddir)/Synthesis-SW/Rules-Synth.mk
endif
if SYNTH_HW
  HWSYNTH_SUBDIR   = hwsynth
  include $(root_builddir)/Synthesis-Actor-Cynthesizer/Rules-Synth.mk
endif
if SYNTH_HWC
  HWSYNTHC_SUBDIR  = hwsynth-concurrent
  include $(root_builddir)/Synthesis-Actor-Concurrent/Rules-Synth.mk
endif
if SYNTH_SGX
  SGX_SUBDIR       = specs
  include $(root_builddir)/specGen/Rules-Synth.mk
endif
if SYNTH_TESTLIB
  TESTLIB_SUBDIR   = testlib
  include $(root_builddir)/Simulation-HW-Actor/Rules-Testlib.mk
endif

AM_LDFLAGS = @AM_LDFLAGS@  @BOOST_LDFLAGS@ @SYSTEMOC_LDFLAGS@
AM_CPPFLAGS= @AM_CPPFLAGS@ @SYSTEMOC_INCLUDE@ -I$(srcdir)/../systemoc-idct2d -Wno-deprecated

LIBS= @LIBS@ -lsystemoc

#PROJECT_CPPS=


noinst_PROGRAMS=simulation-voter

simulation_voter_SOURCES=DuplexVoter_codeword_t.cpp
simulation_voter_DEPENDENCIES = @SYSTEMOC_DEPENDENCIES@
simulation_voter_CPPFLAGS= $(AM_CPPFLAGS)

# autotest script is build by some source file. #! line is generated by
#  automake to guarantee proper path. Other scripting languages are easy
#  possible, too (e.g., Perl).
#noinst_SCRIPTS=autotest.sh

CLEANFILES=$(noinst_SCRIPTS)

#USR_DEF_SKELETONS = $(srcdir)/../systemoc-idct2d
USR_DEF_SKELETONS = $(srcdir)/../../SysteMoC-Skeleton

if SYNTH_SW
synth:   $(SYNTHESIS_SUBDIR)/smoc-synth-voter

$(SYNTHESIS_SUBDIR)/smoc-synth-voter:
$(SYNTHESIS_SUBDIR)/smoc-testgen-voter:
$(SYNTHESIS_SUBDIR)/voter.ast.xml: $(simulation_voter_SOURCES)
.PHONY: synth
endif
if SYNTH_HW
hwsynth: $(HWSYNTH_SUBDIR)/smoc-hwsynth-all-voter.stamp
.PHONY: hwsynth
endif
if SYNTH_HWC
hwsynthc: $(HWSYNTHC_SUBDIR)/smoc-hwsynthc-all-voter.stamp
.PHONY: hwsynthc
endif
if SYNTH_TESTLIB
testlib : $(TESTLIB_SUBDIR)/all-dummies-voter.log
.PHONY: testlib
endif
if SYNTH_SGX
sgx:  	 $(SGX_SUBDIR)/specgraph.dtd \
	 $(SGX_SUBDIR)/voter.pgx \
	 $(root_builddir)/specGen/specGenDir.sh
	$(root_builddir)/specGen/specGenDir.sh \
	$(SGX_SUBDIR)/voter.pgx \
	$(srcdir)/specGen-mapping/ \
	${SGX_SUBDIR}

$(SGX_SUBDIR)/%.pgx: $(SYNTHESIS_SUBDIR)/%.pg.xml
	sed -e 's/networkgraph\.dtd/specgraph\.dtd/g'\
	    -e 's/networkgraph/specificationgraph/g'\
	    $^ > $@

.PHONY: sgx
endif
